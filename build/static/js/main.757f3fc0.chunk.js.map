{"version":3,"sources":["constants/userConstants.js","components/Header.js","actions/userActions.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/employeeConstants.js","actions/employeesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyEmployees/MyEmployees.js","screens/SingleEmployee/SingleEmployee.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleEmployee/CreateEmployee.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/employeesReducers.js","reducers/userReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","Header","setSearch","dispatch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Form","inline","FormControl","type","placeholder","onChange","e","target","value","Link","NavDropdown","name","Item","Divider","onClick","a","localStorage","removeItem","LandingPage","MainScreen","children","title","Row","EMPLOYEES_LIST_REQUEST","EMPLOYEES_LIST_SUCCESS","EMPLOYEES_LIST_FAIL","EMPLOYEES_CREATE_REQUEST","EMPLOYEES_CREATE_SUCCESS","EMPLOYEES_CREATE_FAIL","EMPLOYEES_UPDATE_REQUEST","EMPLOYEES_UPDATE_SUCCESS","EMPLOYEES_UPDATE_FAIL","EMPLOYEES_DELETE_REQUEST","EMPLOYEES_DELETE_SUCCESS","EMPLOYEES_DELETE_FAIL","deleteEmployeeAction","getState","config","headers","Authorization","token","axios","delete","data","payload","message","response","Loading","size","style","display","justifyContent","alignItems","width","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyEmployees","history","search","employeeList","error","employees","employeeDelete","errorDelete","loading","successDelete","success","successCreate","employeeCreate","successUpdate","employeeUpdate","get","push","console","log","to","marginLeft","marginBottom","filter","filteredEmployee","toLowerCase","includes","reverse","map","employee","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Button","Body","Badge","email","role","employmentStatus","employeeID","SingleEmployee","match","useState","setEmail","setName","address","setAddress","setRole","setEmploymentStatus","setEmployeeID","loadingDelete","params","fetching","onSubmit","preventDefault","put","updateEmployeeAction","Group","controlId","Label","Control","Col","LoginScreen","password","setPassword","post","setItem","JSON","stringify","login","RegisterScreen","confirmpassword","setConfirmPassword","username","setUsername","setMessage","userRegister","register","CreateEmployee","resetHandler","createEmployeeAction","ProfileScreen","location","confirmPassword","userUpdate","md","user","varient","App","s","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.757f3fc0.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {} from \"react-router-dom\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Header({ setSearch }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {}, [userInfo]);\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">Virtu Admin Pipeline</Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"m-auto\">\r\n            {userInfo && (\r\n              <Form inline>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Search Employee\"\r\n                  className=\"mr-sm-2\"\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n              </Form>\r\n            )}\r\n          </Nav>\r\n          <Nav>\r\n            {userInfo ? (\r\n              <>\r\n                <Nav.Link href=\"/myemployees\">Employees</Nav.Link>\r\n                <NavDropdown\r\n                  name={`${userInfo.name}`}\r\n                  id=\"collasible-nav-dropdown\"\r\n                >\r\n                  <NavDropdown.Item href=\"/profile\">\r\n                    {/* <img\r\n                      alt=\"\"\r\n                      src={`${userInfo.pic}`}\r\n                      width=\"25\"\r\n                      height=\"25\"\r\n                      style={{ marginRight: 10 }}\r\n                    /> */}\r\n                    My Profile\r\n                  </NavDropdown.Item>\r\n\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Sign Out\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </>\r\n            ) : (\r\n              <Nav.Link href=\"/login\">Login</Nav.Link>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const register = (name, email, password, username) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password, username },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LandingStyles.css\";\r\n\r\nfunction LandingPage({ history }) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/myemployees\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"intro-text\">\r\n            <div>\r\n              <h1 className=\"title\">Virtu Admin New</h1>\r\n              <h2 className=\"subtitle\"></h2>\r\n            </div>\r\n            <div className=\"buttonContainer\">\r\n              <Link to=\"/login\">\r\n                <Button size=\"lg\" className=\"landingbutton\">\r\n                  Login\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <Button\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  className=\"landingbutton\"\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport \"./Screen.css\";\r\n\r\nfunction MainScreen({ children, title }) {\r\n  return (\r\n    <div className=\"mainback\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"page\">\r\n            {title && (\r\n              <>\r\n                <h1 className=\"heading\">{title}</h1>\r\n                <hr />\r\n              </>\r\n            )}\r\n            {children}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","export const EMPLOYEES_LIST_REQUEST = \"EMPLOYEES_LIST_REQUEST\";\r\nexport const EMPLOYEES_LIST_SUCCESS = \"EMPLOYEES_LIST_SUCCESS\";\r\nexport const EMPLOYEES_LIST_FAIL = \"EMPLOYEES_LIST_FAIL\";\r\n\r\nexport const EMPLOYEES_CREATE_REQUEST = \"EMPLOYEES_CREATE_REQUEST\";\r\nexport const EMPLOYEES_CREATE_SUCCESS = \"EMPLOYEES_CREATE_SUCCESS\";\r\nexport const EMPLOYEES_CREATE_FAIL = \"EMPLOYEES_CREATE_FAIL\";\r\n\r\nexport const EMPLOYEES_UPDATE_REQUEST = \"EMPLOYEES_UPDATE_REQUEST\";\r\nexport const EMPLOYEES_UPDATE_SUCCESS = \"EMPLOYEES_UPDATE_SUCCESS\";\r\nexport const EMPLOYEES_UPDATE_FAIL = \"EMPLOYEES_UPDATE_FAIL\";\r\n\r\nexport const EMPLOYEES_DELETE_REQUEST = \"EMPLOYEES_DELETE_REQUEST\";\r\nexport const EMPLOYEES_DELETE_SUCCESS = \"EMPLOYEES_DELETE_SUCCESS\";\r\nexport const EMPLOYEES_DELETE_FAIL = \"EMPLOYEES_DELETE_FAIL\";","import {\r\n  EMPLOYEES_CREATE_FAIL,\r\n  EMPLOYEES_CREATE_REQUEST,\r\n  EMPLOYEES_CREATE_SUCCESS,\r\n  EMPLOYEES_DELETE_FAIL,\r\n  EMPLOYEES_DELETE_REQUEST,\r\n  EMPLOYEES_DELETE_SUCCESS,\r\n  EMPLOYEES_LIST_FAIL,\r\n  EMPLOYEES_LIST_REQUEST,\r\n  EMPLOYEES_LIST_SUCCESS,\r\n  EMPLOYEES_UPDATE_FAIL,\r\n  EMPLOYEES_UPDATE_REQUEST,\r\n  EMPLOYEES_UPDATE_SUCCESS,\r\n} from \"../constants/employeeConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listEmployees = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: EMPLOYEES_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/employees`, config);\r\n\r\n    dispatch({\r\n      type: EMPLOYEES_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: EMPLOYEES_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createEmployeeAction = (email, name, address, role, employmentStatus, employeeID) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: EMPLOYEES_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/employees/create`,\r\n      { email, name, address, role, employmentStatus, employeeID },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: EMPLOYEES_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: EMPLOYEES_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteEmployeeAction = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: EMPLOYEES_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/employees/${id}`, config);\r\n\r\n    dispatch({\r\n      type: EMPLOYEES_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: EMPLOYEES_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateEmployeeAction = (id, email, name, address, role, employmentStatus, employeeID) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: EMPLOYEES_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/employees/${id}`,\r\n      { email, name, address, role, employmentStatus, employeeID },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: EMPLOYEES_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: EMPLOYEES_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loading({ size = 100 }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <Spinner\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n        }}\r\n        animation=\"border\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst ErrorMessage = ({ variant = \"info\", children }) => {\r\n  return (\r\n    <Alert variant={variant} style={{ fontSize: 20 }}>\r\n      <strong>{children}</strong>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Badge,\r\n  Button,\r\n  Card,\r\n  Table,\r\n  Container,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteEmployeeAction,\r\n  listEmployees,\r\n} from \"../../actions/employeesActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nfunction MyEmployees({ history, search }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const employeeList = useSelector((state) => state.employeeList);\r\n  const { error, employees } = employeeList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const employeeDelete = useSelector((state) => state.employeeDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = employeeDelete;\r\n\r\n  const employeeCreate = useSelector((state) => state.employeeCreate);\r\n  const { success: successCreate } = employeeCreate;\r\n\r\n  const employeeUpdate = useSelector((state) => state.employeeUpdate);\r\n  const { success: successUpdate } = employeeUpdate;\r\n\r\n  useEffect(() => {\r\n    dispatch(listEmployees());\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    successUpdate,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteEmployeeAction(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen>\r\n      {console.log(employees)}\r\n      <Link to=\"/createemployee\">\r\n        <AddCircleIcon style={{ marginLeft: 10, marginBottom: 6 }}>\r\n          Add new Employee\r\n        </AddCircleIcon>\r\n      </Link>\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {errorDelete && (\r\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n      )}\r\n      {employees &&\r\n        employees\r\n          .filter((filteredEmployee) =>\r\n            filteredEmployee.name.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .reverse()\r\n          .map((employee) => (\r\n            <Accordion>\r\n              <Card style={{ margin: 10 }} key={employee._id}>\r\n                <Card.Header style={{ display: \"flex\" }}>\r\n                  <span\r\n                    style={{\r\n                      color: \"black\",\r\n                      textDecoration: \"none\",\r\n                      flex: 1,\r\n                      cursor: \"pointer\",\r\n                      alignSelf: \"center\",\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    <Accordion.Toggle\r\n                      as={Card.Text}\r\n                      variant=\"link\"\r\n                      eventKey=\"0\"\r\n                    >\r\n                      {employee.name}\r\n                    </Accordion.Toggle>\r\n                  </span>\r\n\r\n                  <div>\r\n                    <DeleteIcon onClick={() => deleteHandler(employee._id)}>\r\n                      <Button variant=\"danger\" className=\"mx-2\">\r\n                        Delete\r\n                      </Button>\r\n                    </DeleteIcon>\r\n                  </div>\r\n                </Card.Header>\r\n\r\n                <div className=\"mx-6\"></div>\r\n\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body>\r\n                    <h5 justifyContent=\"center\">\r\n                      <Badge variant=\"success\">\r\n                        <Row>\r\n                          <h5>Email - {employee.email}</h5>\r\n                        </Row>\r\n                        <Row>\r\n                          <h5>Role - {employee.role}</h5>{\" \"}\r\n                        </Row>\r\n                        <Row>\r\n                          <h5>\r\n                            Employment status - {employee.employmentStatus}\r\n                          </h5>{\" \"}\r\n                        </Row>\r\n                        <Row>\r\n                          {\" \"}\r\n                          <h5>EmployeeID - {employee.employeeID}</h5>{\" \"}\r\n                        </Row>\r\n                        <Button\r\n                          color=\"danger\"\r\n                          href={`/employee/${employee._id}`}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                      </Badge>\r\n                    </h5>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          ))}\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default MyEmployees;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Form, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteEmployeeAction,\r\n  updateEmployeeAction,\r\n} from \"../../actions/employeesActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nfunction SingleEmployee({ match, history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [employmentStatus, setEmploymentStatus] = useState(\"\");\r\n  const [employeeID, setEmployeeID] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const employeeUpdate = useSelector((state) => state.employeeUpdate);\r\n  const { loading, error } = employeeUpdate;\r\n\r\n  const employeeDelete = useSelector((state) => state.employeeDelete);\r\n  const { loading: loadingDelete, error: errorDelete } = employeeDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteEmployeeAction(id));\r\n    }\r\n    history.push(\"/myemployees\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(`/api/employees/${match.params.id}`);\r\n      setEmail(data.email);\r\n      setAddress(data.address);\r\n      setName(data.name);\r\n      setRole(data.role);\r\n      setEmploymentStatus(data.setEmploymentStatus);\r\n      setEmployeeID(data.employeeID);\r\n    };\r\n\r\n    fetching();\r\n  }, [match.params.id]);\r\n\r\n  const resetHandler = () => {\r\n    setEmail(\"\");\r\n    setAddress(\"\");\r\n    setName(\"\");\r\n    setRole(\"\");\r\n    setEmploymentStatus(\"\");\r\n    setEmployeeID(\"\");\r\n  };\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateEmployeeAction(\r\n        match.params.id,\r\n        email,\r\n        name,\r\n        address,\r\n        role,\r\n        employmentStatus,\r\n        employeeID\r\n      )\r\n    );\r\n    if (\r\n      !email ||\r\n      !name ||\r\n      !address ||\r\n      !role ||\r\n      !employmentStatus ||\r\n      !employeeID\r\n    )\r\n      return;\r\n\r\n    resetHandler();\r\n    history.push(\"/myemployees\");\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Edit Employee\">\r\n      <Card>\r\n        <Card.Header>Edit your Employee</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={updateHandler}>\r\n            {loadingDelete && <Loading />}\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {errorDelete && (\r\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n            )}\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                value={name}\r\n                placeholder=\"Enter the name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                type=\"address\"\r\n                value={address}\r\n                placeholder=\"Enter the Address\"\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Role</Form.Label>\r\n              <Form.Control\r\n                type=\"role\"\r\n                value={role}\r\n                placeholder=\"Enter their Role\"\r\n                onChange={(e) => setRole(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Employment Status</Form.Label>\r\n              <Form.Control\r\n                type=\"employmentstatus\"\r\n                value={employmentStatus}\r\n                placeholder=\"Work Status of Employee\"\r\n                onChange={(e) => setEmploymentStatus(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col} controlId=\"formGridZip\">\r\n              <Form.Label>EmployeeID</Form.Label>\r\n              <Form.Control\r\n                type=\"role\"\r\n                value={employeeID}\r\n                placeholder=\"EmployeeID\"\r\n                onChange={(e) => setEmployeeID(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Update Employee\r\n            </Button>\r\n            <Button\r\n              className=\"mx-2\"\r\n              variant=\"danger\"\r\n              onClick={() => deleteHandler(match.params.id)}\r\n            >\r\n              Delete Employee\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default SingleEmployee;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { login } from \"../../actions/userActions\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./LoginScreen.css\";\r\n\r\nfunction LoginScreen({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/myemployees\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"LOGIN\">\r\n      <div className=\"loginContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>E-Mail Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit Here\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            New Customer ? <Link to=\"/register\">Register Here</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { register } from \"../../actions/userActions\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./RegisterScreen.css\";\r\n\r\nfunction RegisterScreen({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmpassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else dispatch(register(name, email, password, username));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"REGISTER\">\r\n      <div className=\"loginContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confirmpassword}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"username\"\r\n              value={username}\r\n              placeholder=\"Username\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Have an Account ? <Link to=\"/login\">Login</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Button, Card, Col, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createEmployeeAction } from \"../../actions/employeesActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nfunction CreateEmployee({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [employmentStatus, setEmploymentStatus] = useState(\"\");\r\n  const [employeeID, setEmployeeID] = useState(\"\");\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const employeeCreate = useSelector((state) => state.employeeCreate);\r\n  const { loading, error, employee} = employeeCreate;\r\n\r\n  console.log(employee);\r\n\r\n  const resetHandler = () => {\r\n    setEmail(\"\");\r\n    setAddress(\"\");\r\n    setName(\"\");\r\n    setRole(\"\");\r\n    setEmploymentStatus(\"\");\r\n    setEmployeeID(\"\");\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createEmployeeAction(email, name, address, role, employmentStatus, employeeID));\r\n    if (!email || !name || !address || !role || !employmentStatus || !employeeID) return;\r\n\r\n    resetHandler();\r\n    history.push(\"/myemployees\");\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    < >\r\n      <Card bg=\"dark\">\r\n        <Card.Header>Create a new Employee</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                value={name}\r\n                placeholder=\"Enter the name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Address</Form.Label>\r\n              <Form.Control\r\n                type=\"address\"\r\n                value={address}\r\n                placeholder=\"Enter the Address\"\r\n                onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Role</Form.Label>\r\n              <Form.Control\r\n                type=\"role\"\r\n                value={role}\r\n                placeholder=\"Enter their Role\"\r\n                onChange={(e) => setRole(e.target.value)}\r\n              />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"content\">\r\n              <Form.Label>Employment Status</Form.Label>\r\n              <Form.Control\r\n                type=\"employmentstatus\"\r\n                value={employmentStatus}\r\n                placeholder=\"Work Status of Employee\"\r\n                onChange={(e) => setEmploymentStatus(e.target.value)}\r\n              />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formGridZip\">\r\n              <Form.Label>EmployeeID</Form.Label>\r\n              <Form.Control\r\n                type=\"role\"\r\n                value={employeeID}\r\n                placeholder=\"EmployeeID\"\r\n                onChange={(e) => setEmployeeID(e.target.value)}\r\n              />\r\n              </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Create Employee\r\n            </Button>\r\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\r\n              Reset Feilds\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateEmployee;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./ProfileScreen.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateProfile } from \"../../actions/userActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pic, setPic] = useState();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading, error, success } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      setName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n      setUsername(userInfo.username);\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateProfile({ name, email, password, username }));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"EDIT PROFILE\">\r\n      <div>\r\n        <Row className=\"profileContainer\">\r\n          <Col md={6}>\r\n            <Form onSubmit={submitHandler}>\r\n              {loading && <Loading />}\r\n              {success && (\r\n                <ErrorMessage variant=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>{\" \"}\r\n              <Form.Group controlId=\"username\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Username\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                ></Form.Control>\r\n                </Form.Group>\r\n              \r\n              \r\n              <Button type=\"submit\" varient=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n          \r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\r\nimport MyEmployees from \"./screens/MyEmployees/MyEmployees\";\r\nimport SingleEmployee from \"./screens/SingleEmployee/SingleEmployee\";\r\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\r\nimport CreateEmployee from \"./screens/SingleEmployee/CreateEmployee\";\r\nimport { useState } from \"react\";\r\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  return (\r\n    <Router>\r\n      <Header setSearch={(s) => setSearch(s)} />\r\n      <main className=\"App\">\r\n        <Route path=\"/\" component={MyEmployees} exact />\r\n        <Route path=\"/login\" component={LoginScreen} />\r\n        <Route path=\"/register\" component={RegisterScreen} />\r\n        <Route\r\n          path=\"/myemployees\"\r\n          component={({ history }) => (\r\n            <MyEmployees search={search} history={history} />\r\n          )}\r\n        />\r\n        <Route path=\"/employee/:id\" component={SingleEmployee} />\r\n        <Route path=\"/createemployee\" component={CreateEmployee} />;\r\n        <Route path=\"/profile\" component={ProfileScreen} />\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  employeeCreateReducer,\r\n  employeeDeleteReducer,\r\n  employeeListReducer,\r\n  employeeUpdateReducer,\r\n} from \"./reducers/employeesReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  employeeList: employeeListReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  employeeCreate: employeeCreateReducer,\r\n  employeeDelete: employeeDeleteReducer,\r\n  employeeUpdate: employeeUpdateReducer,\r\n  userUpdate: userUpdateReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  EMPLOYEES_UPDATE_REQUEST,\r\n  EMPLOYEES_UPDATE_SUCCESS,\r\n  EMPLOYEES_UPDATE_FAIL,\r\n  EMPLOYEES_CREATE_FAIL,\r\n  EMPLOYEES_CREATE_REQUEST,\r\n  EMPLOYEES_CREATE_SUCCESS,\r\n  EMPLOYEES_DELETE_FAIL,\r\n  EMPLOYEES_DELETE_REQUEST,\r\n  EMPLOYEES_DELETE_SUCCESS,\r\n  EMPLOYEES_LIST_FAIL,\r\n  EMPLOYEES_LIST_REQUEST,\r\n  EMPLOYEES_LIST_SUCCESS,\r\n} from \"../constants/employeeConstants\";\r\n\r\nexport const employeeListReducer = (state = { employees: [] }, action) => {\r\n  switch (action.type) {\r\n    case EMPLOYEES_LIST_REQUEST:\r\n      return { loading: true };\r\n    case EMPLOYEES_LIST_SUCCESS:\r\n      return { loading: false, employees: action.payload };\r\n    case EMPLOYEES_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const employeeCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case EMPLOYEES_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case EMPLOYEES_CREATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case EMPLOYEES_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const employeeDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case EMPLOYEES_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case EMPLOYEES_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case EMPLOYEES_DELETE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const employeeUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case EMPLOYEES_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case EMPLOYEES_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case EMPLOYEES_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}